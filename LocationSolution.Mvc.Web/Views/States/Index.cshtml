@using PagedList.Mvc
@model LocationSolution.Mvc.Web.Models.States.StatesIndexModel

@{
    ViewBag.Title = "States";
}

<h1>States</h1>

<div class="navbar">
    <div class="navbar-inner">
        @using (Html.BeginForm("Index", "States", FormMethod.Get, new { @class = "navbar-form pull-left" }))
        {
            <div class="input-append">
                @Html.TextBox("Query", Request["Query"])
                <button type="submit" class="btn">Search</button>
            </div>
        }
        <div class="pull-right">
            @Html.ActionLink("New State", "Create", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Country</th>
            <th>State Code</th>
            <th>State Name</th>
            <th>Contiguous Land?</th>
            <th>Is Territory?</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var state in Model.StateResults)
        {
            <tr>
                <td>@Html.ActionLink(state.Country.CountryName, "Edit", "Countries", new { id = state.Country.CountryCode }, null)</td>
                <td>@state.StateCode</td>
                <td>@state.StateName</td>
                <td>@(state.ContiguousLand == "1" ? "Yes" : "No")</td>
                <td>@(state.IsTerritory == "1" ? "Yes" : "No")</td>
                <td>
                    <div class="pull-right">@Html.ActionLink("Edit", "Edit", new { id = state.StateId }, new { @class = "btn btn-mini" }) @Html.ActionLink("Delete", "Delete", new { id = state.StateId }, new { @class = "btn btn-mini btn-danger" })</div>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager(Model.StateResults, page => Url.Action("Index", new { page, query = Request["Query"] }))